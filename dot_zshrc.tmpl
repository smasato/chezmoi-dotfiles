# Fig pre block. Keep at the top of this file.
[[ -f "$HOME/.fig/shell/zshrc.pre.zsh" ]] && builtin source "$HOME/.fig/shell/zshrc.pre.zsh"
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# antigen
source ~/antigen.zsh

antigen bundle zsh-users/zsh-syntax-highlighting
antigen bundle zsh-users/zsh-history-substring-search
antigen bundle zsh-users/zsh-autosuggestions
antigen bundle wfxr/forgit
antigen bundle MichaelAquilina/zsh-you-should-use
antigen bundle mollifier/anyframe
antigen theme romkatv/powerlevel10k

antigen apply

# General
autoload -Uz compinit
compinit

setopt auto_cd
setopt auto_list
setopt auto_param_keys
setopt rm_star_wait
setopt correct
setopt interactive_comments
setopt print_eight_bit
setopt auto_pushd
setopt pushd_ignore_dups
setopt auto_param_slash
setopt mark_dirs

bindkey -e

autoload predict-on
zstyle ':predict' verbose true

# History
export HISTFILE=${HOME}/.zsh_history
export HISTSIZE=100000
export SAVEHIST=530000
export HISTORY_IGNORE="(cd|pwd|ls|rm|mv|shutdown|exit|rmdir)"

setopt extended_history
setopt share_history

setopt hist_ignore_dups
setopt hist_ignore_space
setopt hist_ignore_all_dups

setopt append_history
setopt inc_append_history
setopt hist_reduce_blanks

if [ `uname -m` = 'arm64' ]; then
    export PATH="/opt/homebrew/bin:$PATH"
fi

if [ `uname -m` = 'x86_64' ]; then
    export PATH="/usr/local/bin:$PATH"
fi

export PATH="$PATH:$(brew --prefix)/sbin"
export PATH="$PATH:$HOME/.local/bin"
export PATH="$PATH:$HOME/dev/bin"

export HOMEBREW_GITHUB_API_TOKEN={{- (onepasswordDetailsFields "kqiktddg5z46edlrn2f6i5woci").t6mj2kfo3pagmpdweekmcajrc4.value }}
{{ if .work -}}
export PATH="$(brew --prefix)/opt/mysql@5.7/bin:$PATH"
{{- end }}

[ -d $(brew --prefix)/opt/llvm/ ] && export PATH=$PATH:$(brew --prefix)/opt/llvm/bin
[ -d $(brew --prefix)/opt/curl ] && export PATH=$PATH:$(brew --prefix)opt/curl/bin
[ -d $(brew --prefix)/opt/openssl ] && export PATH=$PATH:$(brew --prefix)/opt/openssl/bin
[ -d $(brew --prefix)/opt/coreutils ] && export PATH=$(brew --prefix)/opt/coreutils/libexec/gnubin:$PATH
[ -d $(brew --prefix)/opt/libpq ] && export PATH=$(brew --prefix)/opt/libpq/bin:$PATH
[ -d $(brew --prefix)/opt/go ] && export PATH=$PATH:$(go env GOROOT)/bin
[ -d $HOME/.cargo ] && export PATH="$PATH:$HOME/.cargo/bin"

export GOPATH=$HOME/dev

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
export FZF_DEFAULT_COMMAND='rg --files --hidden --follow --glob "!.git/*"'

# anyframe
# https://qiita.com/mollifier/items/81b18c012d7841ab33c3
autoload -Uz chpwd_recent_dirs cdr add-zsh-hook
add-zsh-hook chpwd chpwd_recent_dirs

zstyle ":anyframe:selector:" use fzf
bindkey '^xb' anyframe-widget-cdr # 過去に移動したことのあるディレクトリに移動する
bindkey '^x^b' anyframe-widget-checkout-git-branch
bindkey '^xr' anyframe-widget-execute-history # コマンドライン履歴から選んで実行する
bindkey '^xp' anyframe-widget-put-history # コマンドライン履歴から選んでコマンドラインに挿入する
bindkey '^xg' anyframe-widget-cd-ghq-repository # ghqコマンドで管理しているリポジトリに移動する
bindkey '^xk' anyframe-widget-kill # プロセスをkillする
bindkey '^xi' anyframe-widget-insert-git-branch # Gitブランチ名をコマンドラインに挿入する
bindkey '^xf' anyframe-widget-insert-filename # ファイル名をコマンドラインに挿入する

# Completion
if type brew &>/dev/null; then
  FPATH=$(brew --prefix)/share/zsh/site-functions:$FPATH

  autoload -Uz compinit
  compinit
fi

setopt complete_in_word
setopt auto_menu
setopt auto_param_keys
setopt list_types
setopt magic_equal_subst
setopt always_last_prompt

autoload -U colors
test -r "~/.dir_colors" && eval $(dircolors ~/.dir_colors)

zstyle ':completion::complete:*' use-cache true
zstyle ':completion:*:default' menu select=1
zstyle ':completion:*' list-colors "${LS_COLORS}"
zstyle ':completion:*' insert-tab false

# google-cloud-sdk
if [ -d $(brew --prefix)/Caskroom/google-cloud-sdk ]; then
  source $(brew --prefix)/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/path.zsh.inc
  source $(brew --prefix)/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/completion.zsh.inc
fi

# alias
alias reload="exec zsh && echo '~/.zshrc reloaded!'"
alias gs='git status'

[ -e $(brew --prefix)/bin/exa ] && alias ls='exa --icons --time-style=long-iso'

[ -e $(brew --prefix)/bin/zoxide ] && eval "$(zoxide init zsh)"
[ -e $(brew --prefix)/bin/rtx ] && eval "$(rtx activate zsh)"

[ -e /usr/local/bin/op ] && eval "$(op completion zsh)"; compdef _op op
source ~/.config/op/plugins.sh

if type github-copilot-cli > /dev/null 2>&1; then
  eval "$(github-copilot-cli alias -- "$0")"
fi

[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh


# Fig post block. Keep at the bottom of this file.
[[ -f "$HOME/.fig/shell/zshrc.post.zsh" ]] && builtin source "$HOME/.fig/shell/zshrc.post.zsh"
