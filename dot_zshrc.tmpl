if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# antigen
source ~/antigen.zsh

antigen bundle zsh-users/zsh-syntax-highlighting
antigen bundle zsh-users/zsh-history-substring-search
antigen bundle zsh-users/zsh-autosuggestions
antigen bundle wfxr/forgit
antigen bundle MichaelAquilina/zsh-you-should-use
antigen bundle mollifier/anyframe
antigen theme romkatv/powerlevel10k

antigen apply

# Config for zsh-history-substring-search
bindkey -M emacs '^P' history-substring-search-up
bindkey -M emacs '^N' history-substring-search-down

# General
autoload -Uz compinit
compinit

setopt auto_cd
setopt auto_list
setopt auto_param_keys
setopt rm_star_wait
setopt correct
setopt interactive_comments
setopt print_eight_bit
setopt auto_pushd
setopt pushd_ignore_dups
setopt auto_param_slash
setopt mark_dirs

bindkey -e

autoload predict-on
zstyle ':predict' verbose true

# History
export HISTFILE=${HOME}/.zsh_history
export HISTSIZE=100000
export SAVEHIST=530000
export HISTORY_IGNORE="(cd|pwd|ls|rm|mv|shutdown|exit|rmdir)"

setopt extended_history
setopt share_history

setopt hist_ignore_dups
setopt hist_ignore_space
setopt hist_ignore_all_dups

setopt append_history
setopt inc_append_history
setopt hist_reduce_blanks

{{ if (eq .chezmoi.arch "arm64") -}}
export PATH="/opt/homebrew/bin:$PATH"
{{- end }}
{{ if (eq .chezmoi.arch "x86_64") -}}
export PATH="/usr/local/bin:$PATH"
{{- end }}
export PATH="$PATH:{{ output "brew" "--prefix" | trim }}/sbin"
export PATH="$PATH:$HOME/.local/bin"
export PATH="$PATH:$HOME/dev/bin"

export HOMEBREW_GITHUB_API_TOKEN={{- (onepasswordDetailsFields "kqiktddg5z46edlrn2f6i5woci").t6mj2kfo3pagmpdweekmcajrc4.value }}
export BUNDLE_RUBYGEMS__PKG__GITHUB__COM={{- (onepasswordItemFields "4bji3bh7itygdk4grlid7u7t7y").token.value }}
{{ if .work -}}
export PATH="{{ output "brew" "--prefix" | trim }}/opt/mysql@5.7/bin:$PATH"
{{- end }}

[ -d {{ output "brew" "--prefix" | trim }}/opt/llvm/ ] && export PATH=$PATH:{{ output "brew" "--prefix" | trim }}/opt/llvm/bin
[ -d {{ output "brew" "--prefix" | trim }}/opt/curl ] && export PATH=$PATH:{{ output "brew" "--prefix" | trim }}opt/curl/bin
[ -d {{ output "brew" "--prefix" | trim }}/opt/openssl ] && export PATH=$PATH:{{ output "brew" "--prefix" | trim }}/opt/openssl/bin
[ -d {{ output "brew" "--prefix" | trim }}/opt/coreutils ] && export PATH={{ output "brew" "--prefix" | trim }}/opt/coreutils/libexec/gnubin:$PATH
[ -d {{ output "brew" "--prefix" | trim }}/opt/libpq ] && export PATH={{ output "brew" "--prefix" | trim }}/opt/libpq/bin:$PATH

{{- if lookPath "go" }}
export PATH=$PATH:{{ output "go" "env" "GOROOT" | trim }}/bin
{{- end }}

[ -d $HOME/.cargo ] && export PATH="$PATH:$HOME/.cargo/bin"

export GOPATH=$HOME/dev

export HOMEBREW_NO_AUTO_UPDATE=1
export HOMEBREW_NO_INSTALL_CLEANUP=1

{{ if stat (joinPath .chezmoi.homeDir ".fzf.zsh") }}
source ~/.fzf.zsh
{{ end }}
export FZF_DEFAULT_COMMAND='rg --files --hidden --follow --glob "!.git/*"'

# Config for anyframe
# https://qiita.com/mollifier/items/81b18c012d7841ab33c3
autoload -Uz chpwd_recent_dirs cdr add-zsh-hook
add-zsh-hook chpwd chpwd_recent_dirs

zstyle ":anyframe:selector:" use fzf
bindkey '^xb' anyframe-widget-cdr # 過去に移動したことのあるディレクトリに移動する
bindkey '^x^b' anyframe-widget-checkout-git-branch
bindkey '^xr' anyframe-widget-execute-history # コマンドライン履歴から選んで実行する
bindkey '^xp' anyframe-widget-put-history # コマンドライン履歴から選んでコマンドラインに挿入する
bindkey '^xg' anyframe-widget-cd-ghq-repository # ghqコマンドで管理しているリポジトリに移動する
bindkey '^xk' anyframe-widget-kill # プロセスをkillする
bindkey '^xi' anyframe-widget-insert-git-branch # Gitブランチ名をコマンドラインに挿入する
bindkey '^xf' anyframe-widget-insert-filename # ファイル名をコマンドラインに挿入する

# Completion
{{- if lookPath "brew" }}
FPATH={{ output "brew" "--prefix" | trim }}/share/zsh/site-functions:$FPATH

autoload -Uz compinit
compinit
{{- end }}

setopt complete_in_word
setopt auto_menu
setopt auto_param_keys
setopt list_types
setopt magic_equal_subst
setopt always_last_prompt

autoload -U colors
{{ if stat (joinPath .chezmoi.homeDir ".dir_colors") }}
{{ output "dircolors" (joinPath .chezmoi.homeDir ".dir_colors") | trim }}
{{ end }}

zstyle ':completion::complete:*' use-cache true
zstyle ':completion:*:default' menu select=1
zstyle ':completion:*' list-colors "${LS_COLORS}"
zstyle ':completion:*' insert-tab false

# google-cloud-sdk
if [ -d {{ output "brew" "--prefix" | trim }}/Caskroom/google-cloud-sdk ]; then
  source {{ output "brew" "--prefix" | trim }}/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/path.zsh.inc
  source {{ output "brew" "--prefix" | trim }}/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/completion.zsh.inc
fi

# alias
alias reload="exec zsh && echo '~/.zshrc reloaded!'"

alias gs='git status'
alias gprune='git branch --format "%(refname:short) %(upstream:track)" | grep "\[gone\]" | awk "{print \$1}" | xargs -IXXX git branch -D XXX'
alias gprune-dry='git branch --format "%(refname:short) %(upstream:track)" | grep "\[gone\]" | awk "{print \$1}"'

{{- if lookPath "eza" }}
alias ls='eza --icons --time-style=long-iso'
{{- end }}

# https://github.com/Genivia/ugrep#short-and-quick-command-aliases
alias uq='ug -Q'       # short & quick query TUI (interactive, uses .ugrep config)
alias ux='ug -UX'      # short & quick binary pattern search (uses .ugrep config)
alias uz='ug -z'       # short & quick compressed files and archives search (uses .ugrep config)

alias ugit='ug -R --ignore-files' # works like git-grep & define your preferences in .ugrep config

alias grep='ugrep -G'    # search with basic regular expressions (BRE)
alias egrep='ugrep -E'    # search with extended regular expressions (ERE)
alias fgrep='ugrep -F'    # find string(s)
alias pgrep='ugrep -P'    # search with Perl regular expressions
alias xgrep='ugrep -W'    # search (ERE) and output text or hex for binary

alias zgrep='ugrep -zG'   # search compressed files and archives with BRE
alias zegrep='ugrep -zE'   # search compressed files and archives with ERE
alias zfgrep='ugrep -zF'   # find string(s) in compressed files and/or archives
alias zpgrep='ugrep -zP'   # search compressed files and archives with Perl regular expressions
alias zxgrep='ugrep -zW'   # search (ERE) compressed files/archives and output text or hex for binary

alias xdump='ugrep -X ""' # hexdump files without searching

{{- if lookPath "zoxide" }}
{{ output "zoxide" "init" "zsh" | trim }}
{{- end }}

{{- if lookPath "mise" }}
{{ output "mise" "activate" "zsh" | trim }}
{{- end }}

{{- if lookPath "op" }}
{{ output "op" "completion" "zsh" | trim }}
compdef _op op
{{ if stat (joinPath .chezmoi.homeDir ".config/op/plugins.sh") }}
source ~/.config/op/plugins.sh
{{ end }}
{{- end }}

[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh
